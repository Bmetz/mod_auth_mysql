#! /bin/sh /usr/share/dpatch/dpatch-run
## 007-auth_mysql_user.dpatch by Joey Schulze <joey@debain.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Unify AuthMySQL_ and Auth_MySQL_ namespace

@DPATCH@
diff -urNad mod-auth-mysql~/DIRECTIVES mod-auth-mysql/DIRECTIVES
--- mod-auth-mysql~/DIRECTIVES	2008-05-14 21:05:45.000000000 +0200
+++ mod-auth-mysql/DIRECTIVES	2008-05-14 21:05:45.000000000 +0200
@@ -1,23 +1,27 @@
 All the directives understood by this version of mod-auth-mysql are listed
-below.  The huge number of synonym directives is due to the merging of two
-separate versions of the program, both of which had subtly different usage
-symantics.  I'm sure there will be rationalisation in the near future.
+below.  All directives exist in the two forms Auth_MySQL_* and AuthMySQL_*
+and share the same semantics.  They are the result of merging two separate
+versions of the mod_auth_mysql in the first place, both of which had subtly
+different usage symantics.  The directive names have since then unified.
+
+Auth_MySQL <on/off>
+	Enable/disable MySQL authentication
 
 Auth_MySQL_Info <host> <user> <password>
 	Server-wide config option to specify the database host, username,
 	and password used to connect to the MySQL server.
 
 	This option affects all directories which do not override it via
-	AuthMySQL_Host, AuthMySQL_User, and/or AuthMySQL_Password.
+	Auth_MySQL_Host, Auth_MySQL_User, and/or Auth_MySQL_Password.
 
-AuthMySQL_DefaultHost <hostname>
+Auth_MySQL_DefaultHost <hostname>
 	Specifies the MySQL server to use for authentication.
 	
 	This option affects all directories which do not override it via
-	AuthMySQL_Host.
+	Auth_MySQL_Host.
 
-AuthMySQL_Host <hostname>
-	Synonym for AuthMySQL_DefaultHost, to be used in .htaccess files and
+Auth_MySQL_Host <hostname>
+	Synonym for Auth_MySQL_DefaultHost, to be used in .htaccess files and
 	directory-specific entries.
 
 Auth_MySQL_DefaultPort <portnum>
@@ -28,35 +32,37 @@
 	Auth_MySQL_Port.
 
 Auth_MySQL_Port <portnum>
-	Specifies a non-default port to use (other than 3306) when talking
-	to the MySQL server on AuthMySQL_Host or AuthMySQL_DefaultHost.
+	Synonym for Auth_MySQL_DefaultPort, to be used in .htaccess files and
+	directory-specific entries.
 
 Auth_MySQL_DefaultSocket <socketname>
-	If using a local MySQL server, you can
-	specify a non-default named pipe to use instead of the default pipe
-	name compiled into your MySQL client library.
+	If using a local MySQL server, you can specify a non-default named
+	pipe to use instead of the default pipe name compiled into your MySQL
+	client library.
 
 	This option affects all directories which do not override it via
 	Auth_MySQL_Socket.
 
 Auth_MySQL_Socket <socketname>
-	If using a local MySQL server, you can specify a non-default named
-	pipe to use instead of the default one compiled into MySQL with this
-	option.
+	Synonym for Auth_MySQL_DefaultSocket, to be used in .htaccess files and
+	directory-specific entries.
 
-AuthMySQL_DefaultUser <username>
+Auth_MySQL_DefaultUser <username>
 	Specifies the username for connection to the MySQL server.
 
-AuthMySQL_User <username>
-	Synonym for AuthMySQL_DefaultUser, to be used in .htaccess files and
+Auth_MySQL_User <username>
+	Synonym for Auth_MySQL_DefaultUser, to be used in .htaccess files and
 	directory-specific entries.
 	
-AuthMySQL_DefaultPassword <password>
+Auth_MySQL_Username <username>
+	Synonym for Auth_MySQL_User.
+	
+Auth_MySQL_DefaultPassword <password>
 	Specifies the password user together with the above user.
 
-AuthMySQL_Password <password>
-	Synonym for AuthMySQL_Password, to be used in .htaccess files and
-	directory-specific entries.
+Auth_MySQL_Password <password>
+	Synonym for Auth_MySQL_DefaultPassword, to be used in .htaccess files
+	and directory-specific entries.
 
 Auth_MySQL_General_DB <database_name>
 	Server-wide, specifies a default database name to use.
@@ -65,13 +71,9 @@
 	Synonym for Auth_MySQL_General_DB, to be used in .htaccess files and
 	directory-specific entries.
 
-AuthMySQL_DefaultDB <database_name>
+Auth_MySQL_DefaultDB <database_name>
 	Synonym for Auth_MySQL_General_DB.
 
-AuthMySQL_DB <database_name>
-	Synonym for Auth_MySQL_General_DB, to be used in .htaccess files and
-	directory-specific entries.
-
 AuthName "<Realm>"
 	Describes the data you're guarding.
 
@@ -96,27 +98,18 @@
 	The name of the MySQL table in the specified database which stores
 	username:password pairs.  By default, it is 'mysql_auth'.
 
-AuthMySQL_Password_Table <password_table_name>
-	Synonym for Auth_MySQL_Password_Table.
-
 Auth_MySQL_Group_Table <group_table_name>
 	As per ...Password_Table above, stores username:group pairs. 
 	Normally you'll store username:password:group triplets in the one
 	table, but we are nothing if not flexible.  Defaults to
 	'mysql_auth'.
 
-AuthMySQL_Group_Table <group_table_name>
-	Synonym for Auth_MySQL_Group_Table.
-
 Auth_MySQL_Username_Field <username_field_name>
 	The name of the field which stores usernames.  Defaults to
 	'username'. The username/password combo specified in Auth_MySQL_Info
 	must have select privileges to this field in the Password and Group
 	tables.
 
-AuthMySQL_Username_Field <username_field_name>
-	Synonym for Auth_MySQL_Username_Field.
-
 Auth_MySQL_Password_Field <password_field_name>
 	As per ...Username_Field above, but for passwords.  Same MySQL
 	access privileges.  Defaults to 'password'.
@@ -128,9 +121,6 @@
 	As per ...Username_Field above.  Defaults to 'groups'.  The query 
 	will use FIND_IN_SET(<group_name>,<group_field_name>).
 	
-AuthMySQL_Group_Field <group_field_name>
-	Synonym for Auth_MySQL_Group_Field.
-	
 Auth_MySQL_Group_User_Field <field_name>
 	The name of the field in the groups table which stores the username. 
 	Defaults to the field name specified for usernames in the passwords
@@ -147,6 +137,9 @@
 	Adds arbitrary clause to username:group matching query, for example:
 	" AND Allowed=1". Clause has to start with space. Default is empty.
  
+Auth_MySQL_Where_Clause <SQL fragment>
+	Synonym for Auth_MySQL_Password_Clause.
+
 Auth_MySQL_Empty_Passwords <on/off>
 	Whether or not to allow empty passwords.  If the password field is
 	empty (equals to '') and this option is 'on', users would be able to
@@ -154,9 +147,6 @@
 	PASSWORD CHECKING.  If this is 'off', they would be denied access. 
 	Default: 'on'.
 
-AuthMySQL_Empty_Passwords <on/off>
-	Synonym for Auth_MySQL_Empty_Passwords.
-
 Auth_MySQL_Encryption_Types <type_list>
 
 	Select which types of encryption to check, and in which order to
@@ -205,9 +195,6 @@
 	MySQL
 		The hashing scheme used by the MySQL PASSWORD() function.
 		
-AuthMySQL_Encryption_Types <type_list>
-	Synonym for Auth_MySQL_Encryption_Types.
-
 Auth_MySQL_Encrypted_Passwords <on/off> (DEPRECATED)
 	Equivalent to: Auth_MySQL_Encryption_Types Crypt_DES
 	Only used if ...Encryption_Types is not set.  Defaults to 'on'.  If
@@ -215,17 +202,11 @@
 	...Encryption_Types is not set, passwords are expected to be in
 	plaintext.
 
-AuthMySQL_Encrypted_Passwords <on/off> (DEPRECATED)
-	Synonym for Auth_MySQL_Encrypted_Passwords.
-
 Auth_MySQL_Scrambled_Passwords <on/off> (DEPRECATED)
 	Equivalent to: Auth_MySQL_Encryption_Types MySQL
 	The same restrictions apply to this directive as to
 	...Encrypted_Passwords.
 
-AuthMySQL_Scrambled_Passwords <on/off> (DEPRECATED)
-	Synonym for Auth_MySQL_Scrambled_Passwords.
-
 Auth_MySQL_Authoritative <on/off>
 	Whether or not to use other authentication schemes if the user is
 	successfully authenticated.  That is, if the user passes the MySQL
@@ -233,9 +214,6 @@
 	option is set 'off'.  The default is 'on' (i.e. if the user passes
 	the MySQL module, they're considered OK).
 
-AuthMySQL_Authoritative <on/off>
-	Synonym for Auth_MySQL_Authoritative.
-
 Auth_MySQL_Non_Persistent <on/off>
 	If set to 'on', the link to the MySQL server is explicitly closed
 	after each authentication request.  Note that I can't think of any
@@ -245,10 +223,10 @@
 	increase the maximum number of simultaneous threads in MySQL and
 	keep this option off.  Default: off, and for good reason.
 
-AuthMySQL_Persistent <on/off>
+Auth_MySQL_Persistent <on/off>
 	An antonym for Auth_MySQL_Non_Persistent.
 
-AuthMySQL_AllowOverride <on/off>
+Auth_MySQL_AllowOverride <on/off>
 	Whether or not .htaccess files are allowed to use their own
 	Host/User/Password/DB specifications.  If set to 'off', then the
 	defaults specified in the httpd.conf cannot be overridden.
@@ -257,6 +235,3 @@
 	Whether or not to enable MySQL authentication.  If it's off, the
 	MySQL authentication will simply pass authentication off to other
 	modules defined.
-
-AuthMySQL <on/off>
-	Synonym for Auth_MYSQL.
diff -urNad mod-auth-mysql~/USAGE mod-auth-mysql/USAGE
--- mod-auth-mysql~/USAGE	2008-05-14 21:05:45.000000000 +0200
+++ mod-auth-mysql/USAGE	2008-05-14 21:05:45.000000000 +0200
@@ -44,9 +44,9 @@
 
 or
 
-AuthMySQL_DefaultHost <host>
-AuthMySQL_DefaultUser <user>
-AuthMySQL_DefaultPassword <password>
+Auth_MySQL_DefaultHost <host>
+Auth_MySQL_DefaultUser <user>
+Auth_MySQL_DefaultPassword <password>
 
 This should be placed globally.
 
@@ -56,12 +56,12 @@
 Auth_MySQL_General_DB <database>
 
 to set that.  This setting can be overridden in .htaccess files if
-AuthMySQL_AllowOverride is set.
+Auth_MySQL_AllowOverride is set.
 
 On that topic, if you want .htaccess files to be restricted in what they're
 able to connect to database-wise, you can
 
-AuthMySQL_AllowOverride no
+Auth_MySQL_AllowOverride no
 
 and the host, user, password, and database name cannot be changed.
 
diff -urNad mod-auth-mysql~/mod_auth_mysql.c mod-auth-mysql/mod_auth_mysql.c
--- mod-auth-mysql~/mod_auth_mysql.c	2008-05-14 21:05:45.000000000 +0200
+++ mod-auth-mysql/mod_auth_mysql.c	2008-05-14 21:16:30.000000000 +0200
@@ -674,14 +674,30 @@
    		  NULL,
    		  RSRC_CONF,	"host, user and password of the MySQL database" ),
 
+   AP_INIT_TAKE3( "AuthMySQL_Info",	set_auth_mysql_info,
+   		  NULL,
+   		  RSRC_CONF,	"host, user and password of the MySQL database" ),
+
+   AP_INIT_TAKE1( "Auth_MySQL_DefaultHost",	set_auth_mysql_host,
+		  NULL,
+		  RSRC_CONF,	"Default MySQL host" ),
+
    AP_INIT_TAKE1( "AuthMySQL_DefaultHost",	set_auth_mysql_host,
 		  NULL,
 		  RSRC_CONF,	"Default MySQL host" ),
 
+   AP_INIT_TAKE1( "Auth_MySQL_DefaultUser",	set_auth_mysql_user,
+		  NULL,
+		  RSRC_CONF,	"Default MySQL user" ),
+
    AP_INIT_TAKE1( "AuthMySQL_DefaultUser",	set_auth_mysql_user,
 		  NULL,
 		  RSRC_CONF,	"Default MySQL user" ),
 
+   AP_INIT_TAKE1( "Auth_MySQL_DefaultPassword",	set_auth_mysql_pwd,
+		  NULL,
+		  RSRC_CONF,	"Default MySQL password" ),
+
    AP_INIT_TAKE1( "AuthMySQL_DefaultPassword",	set_auth_mysql_pwd,
 		  NULL,
 		  RSRC_CONF,	"Default MySQL password" ),
@@ -690,23 +706,39 @@
 		  NULL,
 		  RSRC_CONF,	"Default MySQL server port" ),
 	
+   AP_INIT_TAKE1( "AuthMySQL_DefaultPort",	set_auth_mysql_port,
+		  NULL,
+		  RSRC_CONF,	"Default MySQL server port" ),
+	
    AP_INIT_TAKE1( "Auth_MySQL_DefaultSocket",	set_auth_mysql_socket,
 		  NULL,
 		  RSRC_CONF,	"Default MySQL server socket" ),
 	  	
+   AP_INIT_TAKE1( "AuthMySQL_DefaultSocket",	set_auth_mysql_socket,
+		  NULL,
+		  RSRC_CONF,	"Default MySQL server socket" ),
+	  	
    AP_INIT_TAKE1( "Auth_MySQL_General_DB",	set_auth_mysql_db,
 		  NULL,
 		  RSRC_CONF,	"default database for MySQL authentication" ),
 
+   AP_INIT_TAKE1( "AuthMySQL_General_DB",	set_auth_mysql_db,
+		  NULL,
+		  RSRC_CONF,	"default database for MySQL authentication" ),
+
+   AP_INIT_TAKE1( "Auth_MySQL_DefaultDB",	set_auth_mysql_db,
+		  NULL,
+		  RSRC_CONF,	"default database for MySQL authentication" ),
+
    AP_INIT_TAKE1( "AuthMySQL_DefaultDB",	set_auth_mysql_db,
 		  NULL,
 		  RSRC_CONF,	"default database for MySQL authentication" ),
 
-   AP_INIT_TAKE1( "AuthMySQL_Host",	ap_set_string_slot,
+   AP_INIT_TAKE1( "Auth_MySQL_Host",	ap_set_string_slot,
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, db_host),
 		  OR_AUTHCFG,	"database host" ),
 
-   AP_INIT_TAKE1( "Auth_MySQL_Host",	ap_set_string_slot,
+   AP_INIT_TAKE1( "AuthMySQL_Host",	ap_set_string_slot,
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, db_host),
 		  OR_AUTHCFG,	"database host" ),
 
@@ -730,12 +762,20 @@
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, db_user),
 		  OR_AUTHCFG,	"database user" ),
 
+   AP_INIT_TAKE1( "AuthMySQL_Username",	ap_set_string_slot,
+		  (void*)APR_OFFSETOF(mysql_auth_config_rec, db_user),
+		  OR_AUTHCFG,	"database user" ),
+
+   AP_INIT_TAKE1( "Auth_MySQL_User",	ap_set_string_slot,
+		  (void*)APR_OFFSETOF(mysql_auth_config_rec, db_user),
+		  OR_AUTHCFG,	"database user" ),
+
    AP_INIT_TAKE1( "AuthMySQL_User",	ap_set_string_slot,
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, db_user),
 		  OR_AUTHCFG,	"database user" ),
 
    AP_INIT_TAKE1( "Auth_MySQL_Password",	ap_set_string_slot,
-		(void*)APR_OFFSETOF(mysql_auth_config_rec, db_pwd),
+		  (void*)APR_OFFSETOF(mysql_auth_config_rec, db_pwd),
 		  OR_AUTHCFG,	"database password" ),
 
    AP_INIT_TAKE1( "AuthMySQL_Password",			ap_set_string_slot,
@@ -762,13 +802,17 @@
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, group_table),
 		  OR_AUTHCFG,	"Name of the MySQL table containing the group-name/user-name combination; can be the same as the password-table." ),
 
+   AP_INIT_TAKE1( "AuthMySQL_Group_Table",		ap_set_string_slot,
+		  (void*)APR_OFFSETOF(mysql_auth_config_rec, group_table),
+		  OR_AUTHCFG,	"Name of the MySQL table containing the group-name/user-name combination; can be the same as the password-table." ),
+
    AP_INIT_TAKE1( "Auth_MySQL_Group_Clause",		ap_set_string_slot,
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, group_where_clause),
 		  OR_AUTHCFG,	"Additional WHERE clause for group/user-name lookup" ),
 
-   AP_INIT_TAKE1( "AuthMySQL_Group_Table",		ap_set_string_slot,
-		  (void*)APR_OFFSETOF(mysql_auth_config_rec, group_table),
-		  OR_AUTHCFG,	"Name of the MySQL table containing the group-name/user-name combination; can be the same as the password-table." ),
+   AP_INIT_TAKE1( "AuthMySQL_Group_Clause",		ap_set_string_slot,
+		  (void*)APR_OFFSETOF(mysql_auth_config_rec, group_where_clause),
+		  OR_AUTHCFG,	"Additional WHERE clause for group/user-name lookup" ),
 
    AP_INIT_TAKE1( "Auth_MySQL_Password_Field",		ap_set_string_slot,
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, password_field),
@@ -782,6 +826,10 @@
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, password_where_clause),
 		  OR_AUTHCFG,	"Additional WHERE clause for group password/user-name lookup" ),
 
+   AP_INIT_TAKE1( "AuthMySQL_Password_Clause",		ap_set_string_slot,
+		  (void*)APR_OFFSETOF(mysql_auth_config_rec, password_where_clause),
+		  OR_AUTHCFG,	"Additional WHERE clause for group password/user-name lookup" ),
+
    AP_INIT_TAKE1( "Auth_MySQL_Username_Field",		ap_set_string_slot,
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, user_field),
 		  OR_AUTHCFG,	"The name of the user-name field in the MySQL password (and possibly group) table(s)." ),
@@ -822,6 +870,10 @@
 		 NULL,
 		 OR_AUTHCFG,	"When 'on' the MySQL database is taken to be authoritative and access control is not passed along to other db or access modules." ),
 
+   AP_INIT_FLAG( "Auth_MySQL_AllowOverride",		set_auth_mysql_override,
+		 NULL,
+		 RSRC_CONF,	"Allow directory overrides of configuration" ),
+
    AP_INIT_FLAG( "AuthMySQL_AllowOverride",		set_auth_mysql_override,
 		 NULL,
 		 RSRC_CONF,	"Allow directory overrides of configuration" ),
@@ -854,6 +906,14 @@
 		 NULL,
 		 OR_AUTHCFG,	"Use non-persistent MySQL links" ),
 
+   AP_INIT_FLAG( "AuthMySQL_Non_Persistent",		set_non_persistent,
+		 NULL,
+		 OR_AUTHCFG,	"Use non-persistent MySQL links" ),
+
+   AP_INIT_FLAG( "Auth_MySQL_Persistent",		set_persistent,
+		 NULL,
+		 OR_AUTHCFG,	"Use non-persistent MySQL links" ),
+
    AP_INIT_FLAG( "AuthMySQL_Persistent",		set_persistent,
 		 NULL,
 		 OR_AUTHCFG,	"Use non-persistent MySQL links" ),
@@ -870,6 +930,10 @@
 		  (void*)APR_OFFSETOF(mysql_auth_config_rec, password_where_clause),
 		  OR_AUTHCFG,	"Additional WHERE clause for group password/user-name lookup" ),
 
+   AP_INIT_TAKE1( "AuthMySQL_Where",		ap_set_string_slot,
+		  (void*)APR_OFFSETOF(mysql_auth_config_rec, password_where_clause),
+		  OR_AUTHCFG,	"Additional WHERE clause for group password/user-name lookup" ),
+
   { NULL }
 };
 #else
@@ -878,14 +942,30 @@
 	  NULL,
 	  RSRC_CONF,	TAKE3,	"host, user and password of the MySQL database" },
 
+	{ "AuthMySQL_Info",			set_auth_mysql_info,
+	  NULL,
+	  RSRC_CONF,	TAKE3,	"host, user and password of the MySQL database" },
+
+	{ "Auth_MySQL_DefaultHost",		set_auth_mysql_host,
+	  NULL,
+	  RSRC_CONF,	TAKE1,	"Default MySQL host" },
+
 	{ "AuthMySQL_DefaultHost",		set_auth_mysql_host,
 	  NULL,
 	  RSRC_CONF,	TAKE1,	"Default MySQL host" },
 
+	{ "Auth_MySQL_DefaultUser",		set_auth_mysql_user,
+	  NULL,
+	  RSRC_CONF,	TAKE1,	"Default MySQL user" },
+
 	{ "AuthMySQL_DefaultUser",		set_auth_mysql_user,
 	  NULL,
 	  RSRC_CONF,	TAKE1,	"Default MySQL user" },
 
+	{ "Auth_MySQL_DefaultPassword",		set_auth_mysql_pwd,
+	  NULL,
+	  RSRC_CONF,	TAKE1,	"Default MySQL password" },
+
 	{ "AuthMySQL_DefaultPassword",		set_auth_mysql_pwd,
 	  NULL,
 	  RSRC_CONF,	TAKE1,	"Default MySQL password" },
@@ -894,23 +974,39 @@
 	  NULL,
 	  RSRC_CONF,	TAKE1,  "Default MySQL server port" },
 	
+	{ "AuthMySQL_DefaultPort",		set_auth_mysql_port,
+	  NULL,
+	  RSRC_CONF,	TAKE1,  "Default MySQL server port" },
+	
 	{ "Auth_MySQL_DefaultSocket",		set_auth_mysql_socket,
 	  NULL,
 	  RSRC_CONF,    TAKE1,  "Default MySQL server socket" },
 	  	
+	{ "AuthMySQL_DefaultSocket",		set_auth_mysql_socket,
+	  NULL,
+	  RSRC_CONF,    TAKE1,  "Default MySQL server socket" },
+	  	
 	{ "Auth_MySQL_General_DB",		set_auth_mysql_db,
 	  NULL,
 	  RSRC_CONF,	TAKE1,	"default database for MySQL authentication" },
 	  
+	{ "AuthMySQL_General_DB",		set_auth_mysql_db,
+	  NULL,
+	  RSRC_CONF,	TAKE1,	"default database for MySQL authentication" },
+	  
+	{ "Auth_MySQL_DefaultDB",		set_auth_mysql_db,
+	  NULL,
+	  RSRC_CONF,	TAKE1,	"default database for MySQL authentication" },
+
 	{ "AuthMySQL_DefaultDB",		set_auth_mysql_db,
 	  NULL,
 	  RSRC_CONF,	TAKE1,	"default database for MySQL authentication" },
 
-	{ "AuthMySQL_Host",			ap_set_string_slot,
+	{ "Auth_MySQL_Host",			ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, db_host),
 	  OR_AUTHCFG,	TAKE1,	"database host" },
 
-	{ "Auth_MySQL_Host",			ap_set_string_slot,
+	{ "AuthMySQL_Host",			ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, db_host),
 	  OR_AUTHCFG,	TAKE1,	"database host" },
 
@@ -918,14 +1014,30 @@
 	  (void *) XtOffsetOf(mysql_auth_config_rec, db_socket),
 	  OR_AUTHCFG,	TAKE1,	"database host socket" },
 
+	{ "AuthMySQL_Socket",			ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, db_socket),
+	  OR_AUTHCFG,	TAKE1,	"database host socket" },
+
 	{ "Auth_MySQL_Port",			ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, db_port),
 	  OR_AUTHCFG,	TAKE1,	"database host socket" },
 
+	{ "AuthMySQL_Port",			ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, db_port),
+	  OR_AUTHCFG,	TAKE1,	"database host socket" },
+
 	{ "Auth_MySQL_Username",		ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, db_user),
 	  OR_AUTHCFG,	TAKE1,	"database user" },
 	  
+	{ "AuthMySQL_Username",		ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, db_user),
+	  OR_AUTHCFG,	TAKE1,	"database user" },
+	  
+	{ "Auth_MySQL_User",			ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, db_user),
+	  OR_AUTHCFG,	TAKE1,	"database user" },
+	  
 	{ "AuthMySQL_User",			ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, db_user),
 	  OR_AUTHCFG,	TAKE1,	"database user" },
@@ -958,14 +1070,18 @@
 	  (void *) XtOffsetOf(mysql_auth_config_rec, group_table),
 	  OR_AUTHCFG,	TAKE1,	"Name of the MySQL table containing the group-name/user-name combination; can be the same as the password-table." },
 	  
+	{ "AuthMySQL_Group_Table",		ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, group_table),
+	  OR_AUTHCFG,	TAKE1,	"Name of the MySQL table containing the group-name/user-name combination; can be the same as the password-table." },
+	  
 	{ "Auth_MySQL_Group_Clause",		ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, group_where_clause),
 	  OR_AUTHCFG,	TAKE1,  "Additional WHERE clause for group/user-name lookup" },
 	  
-	{ "AuthMySQL_Group_Table",		ap_set_string_slot,
-	  (void *) XtOffsetOf(mysql_auth_config_rec, group_table),
-	  OR_AUTHCFG,	TAKE1,	"Name of the MySQL table containing the group-name/user-name combination; can be the same as the password-table." },
-
+	{ "AuthMySQL_Group_Clause",		ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, group_where_clause),
+	  OR_AUTHCFG,	TAKE1,  "Additional WHERE clause for group/user-name lookup" },
+	  
 	{ "Auth_MySQL_Password_Field",		ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, password_field),
 	  OR_AUTHCFG,	TAKE1,	"The name of the field in the MySQL password table" },
@@ -978,6 +1094,10 @@
 	  (void *) XtOffsetOf(mysql_auth_config_rec, password_where_clause),
 	  OR_AUTHCFG,	TAKE1,  "Additional WHERE clause for group password/user-name lookup" },
 
+	{ "AuthMySQL_Password_Clause",		ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, password_where_clause),
+	  OR_AUTHCFG,	TAKE1,  "Additional WHERE clause for group password/user-name lookup" },
+
 	{ "Auth_MySQL_Username_Field",		ap_set_string_slot,
 	  (void *) XtOffsetOf(mysql_auth_config_rec, user_field),
 	  OR_AUTHCFG,	TAKE1,	"The name of the user-name field in the MySQL password (and possibly group) table(s)." },
@@ -1018,6 +1138,10 @@
 	  NULL,
 	  OR_AUTHCFG,	FLAG,	"When 'on' the MySQL database is taken to be authoritative and access control is not passed along to other db or access modules." },
 
+	{ "Auth_MySQL_AllowOverride",		set_auth_mysql_override,
+	  NULL,
+	  RSRC_CONF,	FLAG,	"Allow directory overrides of configuration" },
+
 	{ "AuthMySQL_AllowOverride",		set_auth_mysql_override,
 	  NULL,
 	  RSRC_CONF,	FLAG,	"Allow directory overrides of configuration" },
@@ -1050,6 +1174,14 @@
 	  NULL,
 	  OR_AUTHCFG,	FLAG,	"Use non-persistent MySQL links" },
 
+	{ "AuthMySQL_Non_Persistent",		set_non_persistent,
+	  NULL,
+	  OR_AUTHCFG,	FLAG,	"Use non-persistent MySQL links" },
+
+	{ "Auth_MySQL_Persistent",		set_persistent,
+	  NULL,
+	  OR_AUTHCFG,	FLAG,	"Use non-persistent MySQL links" },
+
 	{ "AuthMySQL_Persistent",		set_persistent,
 	  NULL,
 	  OR_AUTHCFG,	FLAG,	"Use non-persistent MySQL links" },
@@ -1066,6 +1198,10 @@
 	  (void *) XtOffsetOf(mysql_auth_config_rec, password_where_clause),
 	  OR_AUTHCFG,	TAKE1,  "Additional WHERE clause for group password/user-name lookup" },
 
+	{ "AuthMySQL_Where",			ap_set_string_slot,
+	  (void *) XtOffsetOf(mysql_auth_config_rec, password_where_clause),
+	  OR_AUTHCFG,	TAKE1,  "Additional WHERE clause for group password/user-name lookup" },
+
 	{ NULL }
 };
 
